name: Build and Test Rust

on:
  push: # temporary!! FIXME: Do not merge, restore to `pull_request`
    paths: # this is meant to mean any change except in `cdn`.
      - '**'
      - '!cdn/**'

env:
  CARGO_TERM_COLOR: always

jobs:

  test-no-run:
    name: Compile tests

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [macos]
        include:
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-registry-${{ hashFiles('**/Cargo.*') }}
          restore-keys: |
            ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-index-${{ hashFiles('**/Cargo.*') }}
          restore-keys: |
            ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-index-

      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-target-${{ hashFiles('**/Cargo.*') }}
          restore-keys: |
            ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-target-

      - name: Compile tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--no-run"

  test:
    name: Test
    needs: test-no-run

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [macos]
        include:
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-registry-${{ hashFiles('**/Cargo.*') }}
          restore-keys: |
            ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-index-${{ hashFiles('**/Cargo.*') }}
          restore-keys: |
            ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-index-

      - name: Cache Cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-target-${{ hashFiles('**/Cargo.*') }}
          restore-keys: |
            ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-target-

      - name: Test (cargo test)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "-- --nocapture"
        env:
          RUST_LOG: debug
          RUST_BACKTRACE: 1
